apply plugin: 'java'
apply plugin: 'application'

def versionNum = '0.0.21'

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

task loader(type: Exec) {
    dependsOn << 'uberloader'
    commandLine './src/make/buildit.sh'
}

task unloader(type: Exec) {
    dependsOn << 'uberunloader'
    commandLine './src/make/unloader.sh'
}

jar {
    baseName = 'cassandra-loader'
    version = versionNum
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.datastax.cassandra:cassandra-driver-core:3.0.0'
    compile 'org.xerial.snappy:snappy-java:1.0.5'
    compile 'net.jpountz.lz4:lz4:1.2.0'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'com.univocity:univocity-parsers:2.1.1'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
}

task uberloader(type: Jar) {
    dependsOn << 'compileJava'
    from "src/main/resources/logback.xml"
    from files(sourceSets.main.output.classesDir)
    from(configurations.runtime.asFileTree.files.collect { zipTree(it) }) {
        exclude "META-INF/**"
    }
    manifest {
        attributes "Main-Class" : 'com.datastax.loader.CqlDelimLoad'
    }
    baseName = 'cassandra-loader-uber'
    version =  versionNum
}

task uberunloader(type: Jar) {
    dependsOn << 'compileJava'
    from "src/main/resources/logback.xml"
    from files(sourceSets.main.output.classesDir)
    from(configurations.runtime.asFileTree.files.collect { zipTree(it) }) {
        exclude "META-INF/**"
    }
    manifest {
        attributes "Main-Class" : 'com.datastax.loader.CqlDelimUnload'
    }
    baseName = 'cassandra-unloader-uber'
    version =  versionNum
}
